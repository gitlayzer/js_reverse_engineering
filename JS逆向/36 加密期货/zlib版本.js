const CryptoJS = require('crypto-js');

const pako = require('pako');

en = function (t) {
    var e, n = pako.inflate(new Uint8Array(t.match(/[\da-f]{2}/gi).map(function (t) {
        return parseInt(t, 16)
    }))), r = "";
    for (e = 0; e < n.length / 16384; e++)
        r += String.fromCharCode.apply(null, n.slice(16384 * e, (e + 1) * 16384));
    return decodeURIComponent(escape(r += String.fromCharCode.apply(null, n.slice(16384 * e))))
}
// en = function(t) {
//     var e, n = get_e2(new Uint8Array(t.match(/[\da-f]{2}/gi).map(function(t) {
//         return parseInt(t, 16)
//     }))), r = "";
//     for (e = 0; e < n.length / 16384; e++)
//         r += String.fromCharCode.apply(null, n.slice(16384 * e, (e + 1) * 16384));
//     return decodeURIComponent(escape(r += String.fromCharCode.apply(null, n.slice(16384 * e))))
// };
er = function (t, e) {
    var n = en(CryptoJS.AES.decrypt(t, CryptoJS.enc.Utf8.parse(e), {
        mode: CryptoJS.mode.ECB,
        padding: CryptoJS.pad.Pkcs7
    }).toString(CryptoJS.enc.Hex));
    return '"' == n.charAt(0) && (n = n.substring(1, n.length)),
    '"' == n.charAt(n.length - 1) && (n = n.substring(0, n.length - 1)),
        n
}
function get_n(url,user) {
    // let e = "/api/openInterest/ex/info"
    // let user = "xdVdRt7/kP1Nfj8z+uig9KvI2+SL0Yx2XhByni3s/Od/UDUoiTOfkPwwxCNuSzik"
    let n = btoa("coinglass".concat(url, "coinglass"));
    n = n.substring(0, 16);
    n = er(user, n)
    return n
}
function get_r(url,user,data) {
    let n = get_n(url,user)
    // console.log('n:::',n)
    //let data = "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"
    let r = er(data, n)
    return r
}
let data = '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\n'
// console.log(get_n())
console.log('r::',get_r("/api/openInterest/ex/info",'rSpD4McftHN4bXlEPJrEz19dJ8xknedHPNw5pCXvPxx/UDUoiTOfkPwwxCNuSzik',data))